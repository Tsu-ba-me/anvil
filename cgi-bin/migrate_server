#!/usr/bin/perl
#
#
#

use strict;
use warnings;
use Anvil::Tools;
use JSON;

$| = 1;

my $THIS_FILE           =  ($0 =~ /^.*\/(.*)$/)[0];
my $running_directory   =  ($0 =~ /^(.*?)\/$THIS_FILE$/)[0];
if (($running_directory =~ /^\./) && ($ENV{PWD}))
{
	$running_directory =~ s/^\./$ENV{PWD}/;
}

my $anvil = Anvil::Tools->new();

$anvil->Log->level({ set => 2 });

$anvil->Get->switches;

$anvil->Database->connect;
$anvil->Log->entry({ source => $THIS_FILE, line => __LINE__, level => 2, secure => 0, key => "log_0132" });
if (not $anvil->data->{sys}{database}{connections})
{
	# No databases, exit.
	$anvil->Log->entry({ source => $THIS_FILE, line => __LINE__, level => 0, 'print' => 1, priority => "err", key => "error_0003" });
	$anvil->nice_exit({ exit_code => 1 });
}

if (not $anvil->data->{switches}{'skip-cookies-check'})
{
	my $cookie_problem = $anvil->Account->read_cookies();

	# Don't do anything data-related if the user is not logged in.
	if ($cookie_problem)
	{
		$anvil->Log->entry({ source => $THIS_FILE, line => __LINE__, level => 0, 'print' => 1, priority => "err", key => "error_0307" });
		$anvil->nice_exit({ exit_code => 1 });
	}
}

# Read in any CGI variables, if needed.
$anvil->Get->cgi();

$anvil->Database->get_hosts();
$anvil->Database->get_anvils();

print $anvil->Template->get({file => "shared.html", name => "json_headers", show_name => 0})."\n";

my $response_body = {};

# Decode request body (JSON string) to a hash.
#
# Note: requests made with the PUT method won't have query params.
my $request_body;

my $is_decode_json_success = eval {
	$request_body = decode_json($anvil->data->{cgi}{PUTDATA}{value});
};

if (not $is_decode_json_success)
{
	$anvil->Log->entry({
		source    => $THIS_FILE,
		line      => __LINE__,
		level     => 0,
		'print'   => 1,
		priority  => "err",
		key       => "error_0304",
		variables => { request_body_string => $anvil->data->{cgi}{PUTDATA}{value}, json_decode_error => $_ }
	});
}

print JSON->new->utf8->encode($response_body)."\n";
